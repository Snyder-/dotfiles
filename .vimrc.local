if filereadable(expand("~/.vimoptions.local"))
  source ~/.vimoptions.local
endif

call plug#begin('~/.vim/plugged')

  Plug 'SirVer/ultisnips'
  Plug 'christoomey/vim-tmux-navigator'
  Plug 'christoomey/vim-tmux-runner'
  Plug 'ecomba/vim-ruby-refactoring'
  Plug 'ggreer/the_silver_searcher'
  Plug 'honza/vim-snippets'
  Plug 'kien/ctrlp.vim'
  Plug 'nelstrom/vim-textobj-rubyblock'
  Plug 'scrooloose/nerdtree'
  Plug 'skalnik/vim-vroom'
  Plug 'thoughtbot/vim-rspec'
  Plug 'tmhedberg/matchit'
  Plug 'tpope/vim-bundler'
  Plug 'tpope/vim-commentary'
  Plug 'tpope/vim-dispatch'
  Plug 'tpope/vim-endwise'
  Plug 'tpope/vim-eunuch'
  Plug 'tpope/vim-fugitive'
  Plug 'tpope/vim-rails'
  Plug 'tpope/vim-repeat'
  Plug 'tpope/vim-surround'
  Plug 'tpope/vim-unimpaired'
  Plug 'vim-airline/vim-airline'
  Plug 'vim-ruby/vim-ruby'
  Plug 'kana/vim-textobj-user'
  Plug 'rizzatti/dash.vim'
  Plug 'altercation/vim-colors-solarized'

call plug#end()

" Airline - Integrate with fonts
let g:solarized_termcolors=256
set background=light
colorscheme solarized
set t_Co=16
syntax enable

" Set Search Highlighting Colors
"set hlsearch
"hi Search cterm=NONE ctermfg=grey ctermbg=blue

set guifont=Anonymice\ Powerline:h20
let g:airline_powerline_fonts = 1

if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif

" unicode symbols
let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.whitespace = 'Ξ'

" airline symbols
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''

nnoremap <Leader>d :NERDTreeToggle<CR>

" automatically rebalance windows on vim resize
autocmd VimResized * :wincmd =

" zoom a vim pane, <C-w>= to re-balance
nnoremap <leader>- :wincmd _<cr>:wincmd \|<cr>
nnoremap <leader>= :wincmd =<cr>

nnoremap <leader>irb :VtrOpenRunner {'orientation': 'h', 'percentage': 50, 'cmd': 'irb'}<cr>
nnoremap <leader>va :VtrAttachToPane <cr>

" turn on undo files
set noundofile

let g:rspec_command = "VtrSendCommandToRunner! rspec {spec}"

map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>

" Edit Vimrc.local
map <Leader>vi :tabedit ~/.vimrc.local<CR>

" Edit tmux.conf.local
map <Leader>vt :tabedit ~/.tmux.conf.local<CR>

" Source in changes to Vimrc.local
map <Leader>sv :source ~/.vimrc.local<CR>

" Type jk to escape insert mode
imap jk <esc>

" Escape insert and write buffer
imap <C-c> <esc>:w<cr>

" Make CtrlP use ag for listing the files. Way faster and no useless files.
let g:ctrlp_user_command = 'ag %s -l --hidden --nocolor -g ""'
let g:ctrlp_use_caching = 0

" Let 0 go to beginning of non whitespace
nnoremap 0 ^

augroup rubypath
  autocmd!

" Allow GF to try and add suffix to filename
  autocmd FileType ruby setlocal suffixesadd+=.rb
  autocmd FileType eruby let g:UltiSnipsAddFiletypes="html"
augroup END

" Move lines up and down
nmap <Leader>k [e
nmap <Leader>j ]e
vmap <Leader>k [egv
vmap <Leader>j ]egv

" Vim-ruby-refactoring mappings
nnoremap <leader>map  :RAddParameter<cr>
nnoremap <leader>mcpc :RConvertPostConditional<cr>
nnoremap <leader>mel  :RExtractLet<cr>
vnoremap <leader>mec  :RExtractConstant<cr>
vnoremap <leader>melv :RExtractLocalVariable<cr>
nnoremap <leader>mit  :RInlineTemp<cr>
vnoremap <leader>mrlv :RRenameLocalVariable<cr>
vnoremap <leader>mriv :RRenameInstanceVariable<cr>
vnoremap <leader>mem  :RExtractMethod<cr>

" Set ultisnips triggers
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"

" Dash integration
" search docs for word under cursor
nmap <silent> <leader>m <Plug>DashGlobalSearch

